---

#########################################################
## Configuration                                       ##
#########################################################

# Enable user namespaces
- name: Enable user namespaces for Podman
  become: true
  ansible.builtin.command:
    cmd: "sysctl user.max_user_namespaces=28633"

#########################################################
## Create podman user/group                            ##
#########################################################

# Create podman user group
- name: Create Podman user group for managing Podman containers
  become: true
  ansible.builtin.group: 
    name: "{{ podman_service_group }}"

# Create password for podman user
- name: Set variable (podman_service_user_password)...
  ansible.builtin.set_fact:
    podman_service_user_password: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters,digits') }}"
  when: podman_service_user_password is not defined

# Check if user podman exists, then fail message
- name: Check if Podman service user exists
  ansible.builtin.fail:
    msg: "Podman service user '{{ podman_service_user }}' already exists. Please remove the user or change the variable 'podman_service_user' in the playbook."
  when: podman_service_user in ansible_facts.users

# Create podman user with cmd
- name: Create Podman service user
  become: true
  ansible.builtin.command:
    cmd: "useradd -m -s /bin/bash -p '{{ podman_service_user_password | password_hash('sha512') }}' -g '{{ podman_service_group }}' '{{ podman_service_user }}'"

# Create folder for ansible tmp files
- name: Create temporary folders for Podman user in home directory
  become: true
  ansible.builtin.file:
    path: /home/podman/.ansible/tmp
    state: directory
    owner: "{{ podman_service_user }}"
    group: "{{ podman_service_group }}"
    # mode: 0755

# Create systemd folder for user
- name: Create systemd configuration folder for Podman user
  become: true
  ansible.builtin.file:
    path: "/home/podman/.config/systemd/user/"
    state: directory
    owner: "{{ podman_service_user }}"
    group: "{{ podman_service_group }}"
    # mode: 0755

# Create containers folder for user
- name: Create systemd configuration folder for Podman user
  become: true
  ansible.builtin.file:
    path: "/home/podman/.config/containers/"
    state: directory
    owner: "{{ podman_service_user }}"
    group: "{{ podman_service_group }}"
    # mode: 0755

# Enable linger for user
- name: Enable linger for Podman user to allow background services...
  become: true
  ansible.builtin.command: "loginctl enable-linger {{ podman_service_user }}"

#########################################################
## Data folder                                         ##
#########################################################

# Create data folder /data to store container data
- name: "Create data folder {{ podman_data_folder }} for storing container data"
  become: true
  ansible.builtin.file:
    path: "{{ podman_data_folder }}"
    state: directory
    owner: "{{ podman_service_user }}"
    group: "{{ podman_service_group }}"
    #mode: 0755

# Set fact for podman data folder
- name: Register podman data folder variable (podman_data_folder)
  ansible.builtin.set_fact:
    podman_data_folder: "{{ podman_data_folder }}"

#########################################################
## Post-configuration                                  ##
#########################################################

# Unset variables
- name: Unset Podman service user and group variables
  ansible.builtin.set_fact:
    podman_service_user_password: ""
   