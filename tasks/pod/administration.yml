---
#########################################################
## Podman Pods administration module                   ##
#########################################################

# Validate global variables.
- name: Validate variables for Podman pods module...
  ansible.builtin.assert:
    that: varitem is defined
    fail_msg: Required variable '{{ varitem }}' has not been provided.
    quiet: true
  loop_control:
    loop_var: varitem
  loop:
    - container_pod

#########################################################
## Create pod                                          ##
#########################################################

# Create pod
- name: Create Podman pod...
  when: action == "create_pod"
  block:
    # Validate global variables.
    - name: Validate variables for Podman Pod module...
      ansible.builtin.assert:
        that: varitem is defined
        fail_msg: Required variable '{{ varitem }}' has not been provided.
        quiet: true
      loop_control:
        loop_var: varitem
      loop:
        - container_name

    # Create Podman pod quadlet to isolate one or more containers in running environment
    - name: Create Podman Pod with name {{ container_pod | splitext | first }}...
      become: true
      become_user: "{{ podman_vars.service_user }}"
      containers.podman.podman_pod:
        name: "{{ container_pod | splitext | first }}"
        debug: false
        state: quadlet
        network: "{{ container_network | default(omit) }}"
        publish: "{{ container_pod_ports | default(omit) }}"
        quadlet_filename: "{{ container_pod }}"
        quadlet_file_mode: "0640"
        quadlet_options:
          - |
            [Install]
            WantedBy=default.target
      register: podman_pod_create_result

    # If result is failed, stop playbook
    - name: Check create pod result...
      ansible.builtin.fail:
        msg: Podman pod creation failed.
      when: podman_pod_create_result is failed

#########################################################
## Destroy pod                                         ##
#########################################################

# Destroy pod
- name: Destroy Podman pod...
  when: action == "destroy_pod"
  block:
    # Show information message
    - name: This part is not (yet) implemented.
      ansible.builtin.debug:
        msg: This part is not (yet) implemented.

    # Stop playbook
    - name: Stop playbook
      ansible.builtin.meta: end_play

#########################################################
## Restart pod                                         ##
#########################################################

# Restart pod
- name: Restart Podman pod...
  when: action == "restart_pod"
  block:
    # Fetch proper userID for user based D-bus interaction
    - name: Retrieve userId to enable systemd user base...
      ansible.builtin.getent:
        database: passwd
        key: "{{ podman_vars.service_user }}"

    # Restart container through systemd
    - name: Restart pod ({{ container_pod | splitext | first }})...
      become: true
      become_user: "{{ podman_vars.service_user }}"
      ansible.builtin.systemd:
        name: "{{ container_pod | splitext | first }}-pod"
        state: restarted
        scope: user
      environment:
        XDG_RUNTIME_DIR: /run/user/{{ getent_passwd[ podman_vars.service_user ].1 }}
      register: podman_pod_restart_result

    # If result is failed, stop playbook
    - name: Check restart pod result...
      ansible.builtin.fail:
        msg: Podman pod restart failed.
      when: podman_pod_restart_result is failed

#########################################################
## Post-actions                                        ##
#########################################################

# Unset variables
- name: Unset variables...
  ansible.builtin.set_fact:
    podman_pod_create_result:
    podman_pod_restart_result:
    podman_pod_destroy_result:
