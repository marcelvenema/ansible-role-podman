---

#########################################################
## Podman Volumes module                               ##
#########################################################

# Validate global variables.
- name: Validate variables for Podman Volumes module...
  ansible.builtin.assert:
    that: "varitem is defined"
    fail_msg: "Required variable '{{ varitem }}' has not been provided."
    quiet: true
  loop_control:
    loop_var: varitem
  loop:
    - container_volumes

#########################################################
## create_volumes                                      ##
#########################################################

# Create volume folders
- name: Create container volume folders...
  when: action == "create_volumes"
  block:

    # Validate variables with loop
    - name: Validate variables for copying files to container volume folders...
      ansible.builtin.assert:
        that: "varitem is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop:
        - container_volumes

    # Add podman_data_folder before each item in container_volumes
    - name: Gather volume folders...
      ansible.builtin.set_fact: 
        _container_volumes: "{% for item in container_volumes %}{{ podman_data_folder }}/{{ item }}{% if not loop.last %},{% endif %}{% endfor %}"

    # Create folders from first part of container_volumes
    - name: Create data folders...
      become: true
      ansible.builtin.file:
        path: "{{ item.split(':')[0] }}"
        state: directory
        owner: "{{ volume_owner | default(podman_service_user) }}"
        group: "{{ volume_group | default(podman_service_group) }}"
        mode: "{{ volume_mode | default('0644') }}"
      with_items: "{{ _container_volumes.split(',') }}"
      when: container_volumes | length > 0

#########################################################
## destroy_volumes                                     ##
#########################################################

# Destroy volume folders
- name: Destroy container volume folders...
  when: action == "destroy_volumes"
  block:

    # Add podman_data_folder before each item in container_volumes
    - name: Gather volume folders...
      ansible.builtin.set_fact: 
        _container_volumes: "{% for item in container_volumes %}{{ podman_data_folder }}/{{ item }}{% if not loop.last %},{% endif %}{% endfor %}"

    # Destroy folders from first part of container_volumes
    - name: Destroy data folders...
      ansible.builtin.file:
        path: "{{ item.split(':')[0] }}"
        state: absent
      with_items: "{{ _container_volumes.split(',') }}"

#########################################################
## copy_to_volume                                      ##
#########################################################

# Copy to volume folders
- name: Copy files to container volume folders...
  when: action == "copy_to_volume"
  block:

    # Validate variables with loop
    - name: Validate variables for copying files to container volume folders...
      ansible.builtin.assert:
        that: "varitem is defined"
        fail_msg: "Required variable '{{ varitem }}' has not been provided."
        quiet: true
      loop_control:
        loop_var: varitem
      loop:
        - volume_source_folder
        - volume_destination_folder

    # Copy folder
    - name: Copy files to container volume folders...
      become: true
      ansible.builtin.copy:
        src: "{{ volume_source_folder }}"
        dest: "{{ podman_data_folder }}{{ volume_destination_folder }}"
        remote_src: true
        owner: "{{ volume_owner | default(podman_service_user) }}"
        group: "{{ volume_group | default(podman_service_group) }}"
        mode: "{{ volume_mode | default('0644') }}"

#########################################################
## Post-actions                                        ##
#########################################################
