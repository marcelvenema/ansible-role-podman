---

#########################################################
## Vault module for Podman                             ##
#########################################################
# secret engine name (vault_name): devices
# secret engine type: kv
# secret name: variable podman_vault_id, default '{{ ansible_fqdn | replace('.', '-') }}'

# Validate variables
- name: Validate required variables for action.
  ansible.builtin.assert:
    that: "item is defined"
    fail_msg: "Required variable '{{ item }}' has not been provided."
    quiet: true
  with_items:
    - vault_address
    - vault_token

# Register variable (_secret_engine_name)
- name: Register variable (secret_engine_name)...
  ansible.builtin.set_fact:
   _secret_engine_name: "{{ podman_secret_engine_name | default('podman') }}"

# Register variable (_secret_name)
- name: Register variable (secret_name)...
  ansible.builtin.set_fact:
    _secret_name: "{{ podman_vault_id | default( ansible_fqdn | replace('.', '-')) }}"

#########################################################
## Secret Engine (devices)                             ##
#########################################################
# Create secret engine
- name: Create secret engine...
  ansible.builtin.include_role:
    name: vault
  vars:
    action: create_secret_engine
    secret_engine_name: "{{ _secret_engine_name }}"
    secret_engine_description: "{{ server_secret_engine_description | default('Secrets for devices') }}"
    secret_engine_type: "kv"

#########################################################
## Secrets (podman_service_user)                       ##
#########################################################
# Declare variable _secret_keyvalue
- name: Register variable (secret_keyvalue_podman)...
  ansible.builtin.set_fact:
    _secret_keyvalue_podman: |
      podman_service_user: '{{ podman_service_user | default('podman') }}'
      podman_service_user_password: '{{ podman_service_user_password | default('change me') }}'
      podman_service_group: '{{ podman_service_group | default('change me') }}'
  when: podman_service_user is defined

- name: Register variable (secret_keyvalue)...
  ansible.builtin.set_fact:
    _secret_keyvalue: "{{ _secret_keyvalue | from_yaml | combine(_secret_keyvalue_podman | from_yaml) | to_yaml }}"
  when: podman_service_user is defined

# Change password on OS for user podman_service_user
- name: "Change password for user {{ podman_service_user }}..."
  become: true
  ansible.builtin.user:
    name: "{{ podman_service_user }}"
    password: "{{ podman_service_password | password_hash('sha512') }}"
  when: podman_service_user is defined and podman_service_password is defined

#########################################################
## Store secrets                                       ##
#########################################################
# Store usernames and passwords in Hashicorp Vault.
- name: "Store {{ ansible_fqdn }} usernames and passwords in Vault"
  ansible.builtin.include_role:
    name: vault
  vars:
    action: create_secret
    secret_engine_name: "{{ _secret_engine_name }}"
    secret_name: "{{ _secret_name }}"
    secret_keyvalue: "{{ _secret_keyvalue | from_yaml }}"

#########################################################
## Post-configure                                      ##
#########################################################
# Unset variables
- name: Unset variables...
  ansible.builtin.set_fact:
    _secret_engine_name: null
    _secret_name: null
    _secret_keyvalue: null

