---

#########################################################
## Main module for Podman ansible role                 ##
#########################################################

# Show message
- name: Show action message
  debug:
    msg: "Starting role {{ role_name }}... action: {{ action }}."

# If action variable is not defined, gather status of the service and set action variable
- name: Gather action variable status...
  ansible.builtin.include_tasks: set_action.yml
  when: action is not defined

# Assert that action is in actions
- name: "Verify valid action ({{ action }})..."
  ansible.builtin.assert:
    that:
      - action in (actions | map('dict2items') | map('first') | map(attribute='key') | list)
    fail_msg: "The action '{{ action }}' is not in the list of valid actions..."
    quiet: true

# Get defaults for the role
- name: Gather variables (podman)...
  ansible.builtin.include_vars:
    file: "{{ role_path }}/defaults/main.yml"
    name: podman_defaults

# Set variables for the role
- name: Register variables (podman)...
  ansible.builtin.set_fact:
    podman_vars: "{{ podman_defaults.podman | combine( podman | default({}), recursive=True) }}"
  when: podman is defined

# TODO: Send message to Kafka bus
- name: Publish message to Kafka bus...
  ansible.builtin.debug:
    msg: "TODO: Publish message to Kafka bus..."
  when: kafka_bootstrap_servers is defined 

# -------------------------------------------------------
# Default actions
- name: Start install action...
  ansible.builtin.include_tasks: install.yml
  when: action == "install"

- name: Start uninstall action...
  ansible.builtin.include_tasks: uninstall.yml
  when: action == "uninstall"

- name: Start configure action...
  ansible.builtin.include_tasks: configure.yml
  when: action == "configure"

- name: Start update action...
  ansible.builtin.include_tasks: administration.yml
  when: action == "update"

- name: Start start action...
  ansible.builtin.include_tasks: administration.yml
  when: action == "start"

- name: Start stop action...
  ansible.builtin.include_tasks: administration.yml
  when: action == "stop"

# -------------------------------------------------------
# Container actions
- name: Start start_container action...
  ansible.builtin.include_tasks: containers/administration.yml
  when: action == "start_container"

- name: Start stop_container action...
  ansible.builtin.include_tasks: containers/administration.yml
  when: action == "stop_container"

- name: Start restart_container action...
  ansible.builtin.include_tasks: containers/administration.yml
  when: action == "restart_container"

- name: Start update_container action...
  ansible.builtin.include_tasks: containers/administration.yml
  when: action == "update_container"

- name: Start export_container action...
  ansible.builtin.include_tasks: containers/administration.yml
  when: action == "export_container"

- name: Start run_container_command action...
  ansible.builtin.include_tasks: containers/administration.yml
  when: action == "run_container_command"

- name: Start import_container action...
  ansible.builtin.include_tasks: containers/import_container.yml
  when: action == "import_container"

# -------------------------------------------------------
# Networks actions
- name: Start create_networks action...
  ansible.builtin.include_tasks: network/administration.yml
  when: action == "create_network"

- name: Start destroy_networks action...
  ansible.builtin.include_tasks: network/administration.yml
  when: action == "destroy_network"

# -------------------------------------------------------
# Pods actions
- name: Start create_pods action...
  ansible.builtin.include_tasks: pod/administration.yml
  when: action == "create_pod"

- name: Start destroy_pods action...
  ansible.builtin.include_tasks: pod/administration.yml
  when: action == "destroy_pod"

- name: Start restart_pod action...
  ansible.builtin.include_tasks: pod/administration.yml
  when: action == "restart_pod"

# -------------------------------------------------------
# Images actions
- name: Start export_image action...
  ansible.builtin.include_tasks: images/images.yml
  when: action == "export_image"

- name: Start import_image action...
  ansible.builtin.include_tasks: images/images.yml
  when: action == "import_image"

# -------------------------------------------------------
# Volumes actions
- name: Start create_volumes action...
  ansible.builtin.include_tasks: containers/volumes.yml
  when: action == "create_volumes"

- name: Start destroy_volumes action...
  ansible.builtin.include_tasks: containers/volumes.yml
  when: action == "destroy_volumes"

- name: Start copy_to_volume action...
  ansible.builtin.include_tasks: containers/volumes.yml
  when: action == "copy_to_volume"
# -------------------------------------------------------
